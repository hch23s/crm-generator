package ${basePackage}.controller;

import java.util.List;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.common.annotation.Log;
import com.common.enums.BusinessType;
import ${basePackage}.entity.${className};
import ${basePackage}.service.I${className}Service;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import com.common.core.controller.BaseController;
import com.common.core.domain.AjaxResult;
import com.common.utils.poi.ExcelUtil;
import com.common.core.page.TableDataInfo;

/**
 * ${comments}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${pathName}")
@Api(tags="${comments}")
public class ${className}Controller extends BaseController{

    @Autowired
    private I${className}Service ${classname}Service;

    @PostMapping("/list")
    @ApiOperation("查询${comments}列表")
    public TableDataInfo list(@RequestBody ${className} ${classname}){
        startPage();
        List<${className}> list = ${classname}Service.select${className}List(${classname});
        return getDataTable(list);
    }

    /**
     * 新增${comments}
     */
    @GetMapping("/details/{id}")
    @ApiOperation(value = "根据id获取${comments}信息")
    public AjaxResult details(@PathVariable(value = "id") Long id){
        ${className} ${classname} = ${classname}Service.select${className}ById(id);
        return ${classname} !=null?AjaxResult.success(${classname}) : AjaxResult.error();
    }

    @Log(title = "${comments}", businessType = BusinessType.INSERT)
    @PostMapping("/add")
    @ApiOperation(value = "新增${comments}")
    public AjaxResult addSave(@RequestBody ${className} ${classname}){
        return toAjax(${classname}Service.insertAndUpdate${className}(${classname}));
    }

    @Log(title = "${comments}", businessType = BusinessType.UPDATE)
    @PostMapping("/edit")
    @ApiOperation(value = "修改${comments}")
    public AjaxResult editSave(@RequestBody ${className} ${classname}){
        return toAjax(${classname}Service.insertAndUpdate${className}(${classname}));
    }

    @Log(title = "${comments}", businessType = BusinessType.DELETE)
    @DeleteMapping("/delete")
    @ApiOperation(value = "删除${comments}")
    public AjaxResult remove(Long[] ids){
        return toAjax(${classname}Service.delete${className}ByIds(ids));
    }

 	/**
     * 导出${comments}列表
     */
    @RequiresPermissions("${pathName}:export")
    @PostMapping("/export")
    @ResponseBody
    public AjaxResult export(${className} ${classname}){
        List<${className}> list = ${classname}Service.select${className}List(${classname});
        ExcelUtil<${className}> util = new ExcelUtil<${className}>(${className}.class);
        return util.exportExcel(list, "${pathName}");
    }
}
