<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${basePackage}.mapper.${className}Mapper">
    
    <resultMap type="${basePackage}.entity.${className}" id="${className}Result">
#foreach ($column in $columns)
        <result property="${column.attrname}"    column="${column.columnName}"    />
#end
#if($table.tree)
        <result property="parentName" column="parent_name" />
#end
    </resultMap>

    <sql id="select${className}Vo">
        select#foreach($column in $columns) $column.columnName#if($velocityCount != $columns.size()),#end#end from ${tableName}
    </sql>

    <select id="select${className}List" parameterType="${basePackage}.entity.${className}" resultMap="${className}Result">
        <include refid="select${className}Vo"/>
        <where>  
#foreach($column in $columns)
#set($queryType=$column.queryType)
#set($attrname=$column.attrname)
#set($attrType=$column.attrType)
#set($columnName=$column.columnName)
#set($AttrName=$column.attrname.substring(0,1).toUpperCase() + ${column.attrname.substring(1)})
#if($column.query)
#if($column.queryType == "EQ")
            <if test="$attrname != null #if($attrType == 'varchar' ) and $attrname.trim() != ''#end"> and $columnName = #{$attrname}</if>
#elseif($queryType == "NE")
            <if test="$attrname != null #if($attrType == 'varchar' ) and $attrname.trim() != ''#end"> and $columnName != #{$attrname}</if>
#elseif($queryType == "GT")
            <if test="$attrname != null #if($attrType == 'varchar' ) and $attrname.trim() != ''#end"> and $columnName &gt; #{$attrname}</if>
#elseif($queryType == "GTE")
            <if test="$attrname != null #if($attrType == 'varchar' ) and $attrname.trim() != ''#end"> and $columnName &gt;= #{$attrname}</if>
#elseif($queryType == "LT")
            <if test="$attrname != null #if($attrType == 'varchar' ) and $attrname.trim() != ''#end"> and $columnName &lt; #{$attrname}</if>
#elseif($queryType == "LTE")
            <if test="$attrname != null #if($attrType == 'varchar' ) and $attrname.trim() != ''#end"> and $columnName &lt;= #{$attrname}</if>
#elseif($queryType == "LIKE")
            <if test="$attrname != null #if($attrType == 'varchar' ) and $attrname.trim() != ''#end"> and $columnName like concat('%', #{$attrname}, '%')</if>
#elseif($queryType == "BETWEEN")
            <if test="params.begin$AttrName != null and params.begin$AttrName != '' and params.end$AttrName != null and params.end$AttrName != ''"> and $columnName between #{params.begin$AttrName} and #{params.end$AttrName}</if>
#end
#end
#end
        </where>
#if($table.tree)
        order by ${tree_parent_code}
#end
    </select>
    
    <select id="select${className}ById" parameterType="${pk.attrType}" resultMap="${className}Result">
#if($table.crud)
        <include refid="select${className}Vo"/>
        where ${pk.columnName} = #{${pk.attrname}}
#elseif($table.tree)
        select#foreach($column in $columns) t.$column.columnName,#end p.${tree_name} as parent_name
        from ${tableName} t
        left join ${tableName} p on p.${pk.columnName} = t.${tree_parent_code}
        where t.${pk.columnName} = #{${pk.attrname}}
#end
    </select>
        
    <insert id="insert${className}" parameterType="${basePackage}.entity.${className}"#if($pk.increment) useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || !$pk.increment)
            <if test="$column.attrname != null #if($column.attrType == 'String' ) and $column.attrname != ''#end">$column.columnName,</if>
#end
#end
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || !$pk.increment)
            <if test="$column.attrname != null #if($column.attrType == 'String' ) and $column.attrname != ''#end">#{$column.attrname},</if>
#end
#end
         </trim>
         
    </insert>

    <update id="update${className}" parameterType="${basePackage}.entity.${className}">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
            <if test="$column.attrname != null #if($column.attrType == 'String' ) and $column.attrname != ''#end">$column.columnName = #{$column.attrname},</if>
#end
#end
        </trim>
        where ${pk.columnName} = #{${pk.attrname}}
    </update>

    <delete id="delete${className}ById" >
        delete from ${tableName} where ${pk.attrname} = #{${pk.attrname}}
    </delete>

    <delete id="delete${className}ByIds" parameterType="String">
        delete from ${tableName} where ${pk.attrname} in 
        <foreach item="${pk.attrname}" collection="array" open="(" separator="," close=")">
            #{${pk.attrname}}
        </foreach>
    </delete>
    
</mapper>